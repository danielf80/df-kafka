/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.10.2/userguide/java_library_plugin.html
 */

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'application'

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

group = 'com.df.zk'
version = '1.0.0'

application {
	applicationName = "Kafka PoC"
	mainClassName = 'com.df.zafka.MainKafka'
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
	manifest {
		attributes 'Implementation-Title': applicationName,
	       	'Implementation-Version': version,
        	'Main-Class': mainClassName
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

dependencies {
    // Logging
	compile group: 'org.slf4j', 				name: 'slf4j-api', 			version: '1.8.0-beta2'
	compile group: 'org.apache.logging.log4j', 	name: 'log4j-slf4j-impl',	version: '2.11.0'
	compile group: 'org.apache.logging.log4j', 	name: 'log4j-api', 			version: '2.11.0'
  	compile group: 'org.apache.logging.log4j', 	name: 'log4j-core', 		version: '2.11.0'
	
	// ZooKeeper
	compile 'org.apache.zookeeper:zookeeper:3.4.13'
	
	// Kafka
	compile 'org.apache.kafka:kafka-clients:2.1.1'
	
	// Apache
	compile group: 'org.apache.commons', name: 'commons-lang3', 	version: '3.7'
}

// In this section you declare where to find the dependencies of your project
repositories {
    jcenter()
    mavenLocal()
}

task copyDependencies(type: Copy) {
   from configurations.compile
   into 'dependencies'
}

jar.doFirst {
	manifest {
		attributes(
			"Main-Class": mainClassName,
			"Implementation-Title": applicationName,
			"Implementation-Version": version,
			"Class-Path": configurations.compile.collect { it.getName() }.join(' '))
			
	}
}

